Radix Sort



Sorting faster than O(n log n) can only be done in specific circumstances.

Radix sort allows us to sort integers (or other data that can be lexicographically ordered, like strings or certain tuples).



Radix is a term used to describe the number of digits utilized in a positional number system, i.e. the radix of the decimal system is 10, the radix of the binary system is 2.



Radix sort steps:

 
Create a number of “buckets” based on the radix (typically 10 for decimal integers)

 
 
For each value in the sequence to be sorted, place the value into the bucket associated with its least significant value (rightmost digit, in the case of decimal integers).  Once all values have been placed in buckets, remove them in order of least bucket to greatest bucket.

 
 
Repeat step 2 until each value has been placed into the bucket associated with its most significant value (leftmost digit, in the case of decimal integers).  The resulting sequence is sorted.

 


Radix sort is non-comparative, meaning none of the elements in the sequence are ever compared with each other.  For this reason, we can only sort specific types of data (in Java, Comparator and Comparable are not used since the purpose of these interfaces is to directly compare objects).





Supplemental Reading

    Textbook Ch. 12.3.2 p. 558 - 560

Textbook Ch. 12.4 p. 561 - 562

Wikipedia - https://en.wikipedia.org/wiki/Radix_sort 



Homework

 
The implementation of radix sort from lecture will not work if there are negative integers in the sequence.
Implement radix sort so that it does work for negative integers (it may be helpful to first modify the implementation to
only work for negative integers before trying to handle both negatives and positives.)